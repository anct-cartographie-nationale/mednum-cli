---
name: Nightly publish

on:
  schedule:
    - cron: '15 4 * * *' # every day at 04:15 AM

jobs:
  publish-to-data-gouv:
    strategy:
      matrix:
        source: [
            aidants-connect,
            hinaura,
            maine-et-loire,
            les-assembleurs,
            france-services,
            france-tiers-lieux,
            conseiller-numerique,
            francil-in,
            angers,
            hub-lo,
            mulhouse,
            data-inclusion,
            paca,
            loire-atlantique,
            rhin-occ,
            res-in,
            # les-landes,
            la-creuse,
            numi,
            vendee,
            vendee-extraction,
            ultra-num,
            haute-vienne,
            fibre-64,
            mednum-hub-antilles,
            gironde,
            etapes-numerique,
            charente-maritime,
            eure-et-loir,
            conumm,
            corse,
            epernay,
            bus-france-services-charente
          ]
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout mednum-cli repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Transform
        run: yarn transformer.${{ matrix.source }}

      - name: 'Create env file'
        run: |
          touch .env
          echo DATA_GOUV_API_URL="${{ secrets.DATA_GOUV_API_URL }}" >> .env
          echo DATA_GOUV_API_KEY="${{ secrets.DATA_GOUV_API_KEY }}" >> .env
          echo DATA_GOUV_REFERENCE_ID="${{ secrets.DATA_GOUV_REFERENCE_ID }}" >> .env
          echo DATA_GOUV_REFERENCE_TYPE="${{ secrets.DATA_GOUV_REFERENCE_TYPE }}" >> .env

      - name: Publish
        run: yarn publier.${{ matrix.source }}

  deduplicate:
    name: Publish data-inclusion without duplicates
    runs-on: ubuntu-latest
    environment: production
    needs:
      - publish-to-data-gouv

    steps:
      - name: Checkout client-application repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Deduplicate
        run: yarn dedupliquer.data-inclusion

      - name: 'Create env file'
        run: |
          touch .env
          echo DATA_GOUV_API_URL="${{ secrets.DATA_GOUV_API_URL }}" >> .env
          echo DATA_GOUV_API_KEY="${{ secrets.DATA_GOUV_API_KEY }}" >> .env
          echo DATA_GOUV_REFERENCE_ID="${{ secrets.DATA_GOUV_REFERENCE_ID }}" >> .env
          echo DATA_GOUV_REFERENCE_TYPE="${{ secrets.DATA_GOUV_REFERENCE_TYPE }}" >> .env

      - name: Publish to data.gouv
        run: yarn publier.data-inclusion

      - name: Publish to database
        uses: jakejarvis/s3-sync-action@v0.5.1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          SOURCE_DIR: './assets/output/data-inclusion/dynamo-import'
